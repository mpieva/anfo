.\" ANFO short read aligner
.\" (C) 2009 Udo Stenzel
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 3 of the License, or (at
.\" your option) any later version.  See the COPYING file for details.

.\" Process this file with
.\" groff -man -Tascii patman.1
.\"
.TH ANFO-TOOL 1 "OCTOBER 2009" Applications "User Manuals"
.SH NAME
anfo-tool \- process native ANFO binary files
.SH SYNOPSIS
.B anfo-tool [
.I option
.B |
.I pattern
.B ... ]
.SH DESCRIPTION
.B anfo-tool
is used to filter, process and convert the files created by
.BR anfo . 
Every pattern on the command line is wildcard expanded, then for every
input file (or the standard input, if no pattern is given),
.B anfo-tool
builds a chain of input filters, it then merges these input streams in
one of several ways, splits the result up into multiple output streams,
each of which can have a chain of output filter applied.

.SH OPTIONS
.SS General Options
These options apply globally and modify the behavior of the whole
program.  They can be placed anywhere in the command line.

.IP "-V, --version"
Print version number and exit.

.IP "-q, --quiet"
Suppress all output except fatal error messages.

.IP "-v, --verbose"
Produce more output, including progress indicators for most operations.

.IP "--debug"
Produce debugging output in addition to progress information.

.IP "-n, --dry-run"
Parse command line, optionally print a description of the intended
operations, then exit.

.IP "--vmem X"
Limit virtual memory to 
.I X
megabytes.  If memory runs out, 
.I anfo-tool 
tries to free up memory by forgetting about big files, e.g. genomes.
Use this option to avoid swapping or out-of-memory conditions when
operations involve big or multiple genomes.

.SS Setting Parameters
A parameter can be set multiple times on the command line and will
overwrite previous settings.  Any filter option that needs a parameter
picks up the last definition that appeared before the filter option.

.IP "--set-slope S"
Set the slope parameter to 
.IR S .
The 
.I slope 
is used together with the
.I intercept
where filters apply to alignment scores; alignments scoring no worse
than 
.I slope * (length - intercept)
are considered good.  The default is 7.5.

.IP "--set-intercept L"
Set the intercept parameter to 
.IR L .
The 
.I intercept
is used together with the
.I slope
where filters apply to alignment scores; alignments scoring no worse
than 
.I slope * (length - intercept)
are considered good.  The default is 20.

.IP "--set-context C"
Set the context parameter to 
.IR C .
The context is the number of surrounding bases of the reference included
when printing alignments in text form.  The default is 0.

.IP "--set-genome G"
Set the genome parameter to 
.IR G .
Many filters will only consider the best alignments to this specific
genome if it is set.  If no genome is set, the globally best alignment
is used.

.IP "--clear-genome"
Clear the genome parameter.  Filters apply to the globally best
alignment afterwards.

.SS Filter Options
Filters can be applied before merging the inputs or after splitting the
back up.

.IP "-s, --sort-pos=n"
Sort by alignment position while buffering no more than
.I n
MiB in memory.  If a genome is set, alignments to that genome are used.

.IP "-S, --sort-name=n"
Sort by read name while buffering no more than
.I n
MiB in memory.

.IP "-l, --filter-length=L"
Retain alignments only for reads of at least
.I L
bases length.  The reads themselves are kept.

.IP "-f, --filter-score"
Retain alignments only if their score is good enough.  
.IR Uses slope and intercept .

.IP "--filter-mapq=Q"
Remove alignments with mapping quality below
.IR Q .

.IP "-h, --filter-hit=SEQ"
Keep only reads that have a hit to a sequence named
.IR SEQ .
If
.I SEQ 
is empty, reads are kept if they have any hit.  If the
.I genome
parameter is set, only hits to that genome count.

.IP "--delete-hit=SEQ"
Delete alignments to
.IR SEQ .
If 
.I SEQ
is empty, all alignments are deleted.  If the 
.I genome 
parameter is set, only alignments to that genome are deleted.

.IP "--filter-qual=Q"
Mask out bases with quality below 
.IR Q .
Such a base is replaced by the 
.I N
ambiguity code.

.IP "--multiplicity=N"
Keep only reads of molecules that have been sequenced at least 
.I N
times.  Reads are considered to come from the same original molecule if
their aligned coordinates are identical.

.IP "--subsample=F"
Subsample a fraction 
.I F 
of the results.  Every read is independently and randomly choosen to be
kept or not.

.IP "--inside-regions=FILE"
Read a list of regions from 
.IR FILE ,
then keep only alignments that overlap an annotated region.

.IP "--outside-regions=FILE"
Read a list of regions from 
.IR FILE ,
then keep only alignments that do not overlap an annotated region.

.SS "Special Filters"
.IP "-d, --rmdup=Q"
Remove PCR duplicates, clamp quality scores to 
.IR Q .
Two reads are considered to be duplicates, if their aligned coordinates
are identical.  If a 
.I genome
is set, the best alignment to that genome is
used, else the globally best alignment.  Both alignments must be good,
as determined by
.IR slope and intercept .
For a set of duplicates, a consensus is called, generally increasing the
quality scores.  If a resulting quality score exceeds
.IR Q ,
it is set to 
.IR Q .
This filter requires the input to be sorted by alignment coordinate on
the selected
.IR genome .

.IR "--duct-tape=NAME"
Duct-tape overlapping alignments into contigs and call a consensus for
them.  If a 
.I genome 
is set, alignments to that genome are used, else the globally best
alignments.  This filter requires input to be sorted by alignment
coordinate on the genome.  Output is a set of contigs, every position
gets assigned a consensus base, a quality score and likelihoods for
every possible diallele.  (It is called duct-taping because it kind of
looks like an assembly, but is not nearly as solid.)

.IP "--edit-header=ED"
Invoke the editor 
.I ED 
on the text representaion of the stream's header.  This can be used to
clean up header that have accumulated too much cruft.

.SS "Merging Filters"
Exactly one merging filter should be given on the command line, all
filter options occuring before that are part of the input filter chains,
all further filters become output chains.  If no merging filter is
given, 
.I "--concat"
is assumed, and all filters are input filters.

.IP "-c, --concat"
Concatenate all input streams in the order they appear on the command
line.

.IP "-m, --merge"
Merge sorted input streams, producing a sorted result.  All inputs must
be sorted in the same way.

.IP "-j, --join"
Join input streams and retain the single best hits to each genome.
Every input stream must contain a record for every read, reads are
buffered in memory until all of their hits are collected.  This way,
joining works well if all inputs are nearly in the same order.  If reads
are missing from some streams, joining them will waste memory.

.IP "--mega-merge"
Merge many streams such as those produced by running
.BR anfo-sge .
Streams that operated on the same reads are joined, then everything is
merged.  

.SS "Output Options"
If an output option is given on the command line, the current output
filter chain is ended and a new one is started.  If no output option is
given, a textual representation of the final stream is written to 
.IR stdout .
All output options accept
.I -
to write to stdout.

.IP "-o, --output FILE"
Write native binary stream (a compressed protobuf message) to 
.IR FILE .
Writing a binary stream and reading it back in is lossless.

.IP "--output-text FILE"
Write protobuf text stream to
.IR FILE .
If the necessary genomes are available, a textual representation of the
alignments is included.  If the 
.I context
parameter is set, that many additional bases of the reference upstream
and downstream from the alignment are included.

.IP "--output-sam=FILE"
Write alignments in SAM format to
.IR FILE .

.IP "--output-glz FILE"
Write contigs in GLZ 0.9 format to
.IR FILE .
Generating GLZ only works after application of
.IR --duct-tape ,
every contigs becomes a GLZ record.

.IP "--output-3aln FILE"
Write contigs in a table based format to 
.IR FILE .
The format is still subject to change, see the source code for detailed
documentation.

.IP "--output-fasta FILE"
Write alignments(!) in FastA format to 
.IR FILE .
Alignments are writte as pair of reference and query sequence, aligned
coordinates are indicated in the description of the query sequence.  If
the 
.I context
parameter is set, that many additional bases of the reference upstream
and downstream from the alignment are included.  This format is not
suggested for any serious use, it exists to support legacy applications.

.IP "--output-fastq FILE"
Write sequences(!) in FastQ format to 
.IR FILE .
Writing FastQ effectively reconstitutes the input to 
.B ANFO 
if no filtering was done on the results.

.IP "--output-table FILE"
Write per-alignment statistics to 
.IR FILE .
The file has three colums:Ã‚sequence length, alignment score, difference
to next best alignment.  It is mainly useful to analyze/visualize the
distribution of alignment scores.

.IP "--stats FILE"
Write simple statistics to 
.IR FILE .
This results in some simple summary statistics of a whole stream: number
of aligned sequences, average length, GC content.

.SH ENVIRONMENT
.IP ANFO_PATH
Colon separated list of directories searched for genome and index files.

.IP ANFO_TEMP
Temporary space used for sorting of large files.

.SH FILES
.I /etc/popt
.RS
The system wide configuration file for
.BR popt (3).
.B anfo-tool
identifies itself as "anfo-tool" to popt.
.RE

.I ~/.popt
.RS
Per user configuration file for
.BR popt (3).
.RE

.SH BUGS
The command line of this tools is way too complicated and its semantics
are counterintuitive.  Using
.B anfo-tool 
is probably best avoided in most cases, the 
.B guile
bindings should provide a much more scalable and easier to understand
interface.

.SH AUTHOR
Udo Stenzel <udo_stenzel@eva.mpg.de>

.SH "SEE ALSO"
.BR anfo "(1), " fa2dna "(1) " popt "(3), " fasta (5)

